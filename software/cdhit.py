#!/usr/bin/env python
# -*- coding: utf-8 -*-

#------------------------------------------------------------------------------
#   Import all the libraries
#------------------------------------------------------------------------------
import argparse
from selenium import webdriver


try:
    from xvfbwrapper import Xvfb      # To hide the browser
except:
    pass


import os
from time import sleep
import wget
from download import download


#------------------------------------------------------------------------------
#   Functions
#------------------------------------------------------------------------------
def openWebDriver():
    """Opens a webdriever
    
    Returns
    -------
    selenium.webdriver object
        Variable with webdriver object
    """
    return webdriver.Firefox()

def openCdhitURL(webDriver):
    """Given webdriver opens given URL
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
    """
    webDriver.get("http://weizhong-lab.ucsd.edu/cdhit-web-server/cgi-bin/index.cgi?cmd=cd-hit")
    
def uploadFasta(webDriver, fasta):
    """Uploads proteinList to https://www.uniprot.org/uploadlists/
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
    fasta : str
        Path of fasta file
    """
    uploadFileField = webDriver.find_element_by_name("SeqF")
    fastaPath=os.path.realpath(fasta)
    uploadFileField.send_keys(fastaPath)
    
def setIdentityCutOff(webDriver, cutoff="0.9"):
    """Uploads proteinList to https://www.uniprot.org/uploadlists/
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
    cutoff : str
        Sequence identity cutoff (Default=0.9)
    """
    identityCutOffField = webDriver.find_element_by_name("lc1")
    identityCutOffField.clear()
    identityCutOffField.send_keys(str(cutoff))
    
def submit(webDriver):
    """Push submit button
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
    """
    submitButton = webDriver.find_element_by_name("sub")
    submitButton.click()
        
def waitForPageRefresh(webDriver):
    """ Checks whether the page has been refreshed
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
    """
    while not webDriver.title.count("finished")>0:
        sleep(0.1)

def openCdhitResultURL(webDriver):
    """Given webdriver opens given Result URL
    
    To do this it will add "&side=right" to the current URL
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
    """
    resultURL = webDriver.current_url+"&side=right"
    webDriver.get(resultURL)


            

def downloadFastaClstr(webDriver, baseName):
    """Download fasta file generated by CDHIT
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
        
    baseName : str
        base name (without extension) given to the output files.
    """ 
    fastaLinkElm=webDriver.find_element_by_partial_link_text(".fas.1")
    fastaLink=fastaLinkElm.get_attribute('href')
    fastaName = baseName+".fasta"
    download(fastaLink,fastaName)
    
    clstrLinkElm=webDriver.find_element_by_partial_link_text(".fas.1.clstr.sorted")
    clstrLink = clstrLinkElm.get_attribute('href')
    clstrName = baseName+".clstr"
    download(clstrLink,clstrName)
    return fastaName, clstrName

def closeDriver(webDriver):
    """Closes the webbrowser and driver
    
    Parameters
    ----------
    webDriver : selenium.webdriver object
        Given webdriver for specific browser (e.g. Firefox)
    """
    webDriver.quit()
    
def cdhit(fasta, cutoff="0.9"):
    """ Gets yourlist:ID for provided protein list
    
    Parameters
    ----------
    proteinList : str
        Path to the protein list
        
    Returns
    -------
    yourlist : str
        yourlist:ID, this value can furhter on be used in queries
    """
    #--------------------------------------------------------------------------
    #   To Hide the Browser
    #--------------------------------------------------------------------------
    try:
        display = Xvfb()
        display.start()
    except:
        pass
    
    #--------------------------------------------------------------------------
    #   Main Code
    #--------------------------------------------------------------------------
    driver= openWebDriver()
    openCdhitURL(driver)
    uploadFasta(driver,fasta)
    setIdentityCutOff(driver, cutoff=cutoff)
    submit(driver)
    waitForPageRefresh(driver)
    openCdhitResultURL(driver)
    baseName=fasta.replace(".fasta","")+"_CDHIT-"+cutoff
    fastaName, clstrName = downloadFastaClstr(driver, baseName)
    closeDriver(driver)
    os.remove("geckodriver.log")
    
    #--------------------------------------------------------------------------
    #   Stop Hiding the Browser
    #--------------------------------------------------------------------------
    try:
        display.stop()
    except:
        pass
    
    #--------------------------------------------------------------------------
    #   Return resulting file names
    #--------------------------------------------------------------------------
    return fastaName, clstrName

#------------------------------------------------------------------------------
#   Code to run when called as a script with arguments
#------------------------------------------------------------------------------
if __name__ == '__main__':
    #--------------------------------------------------------------------------
    #   Definition of the command line arguments
    #--------------------------------------------------------------------------
    parser = argparse.ArgumentParser()
    parser.add_argument("fasta",
                        help="""Path to FASTA file that contains the protein 
                        sequences""")
    parser.add_argument("--cutoff","-c", default="0.9",
                        help=""" Sequence Identity cutoff (default=0.9)
                        """)
    args = parser.parse_args()
    
    #--------------------------------------------------------------------------
    #   Main Code
    #--------------------------------------------------------------------------
    cdhit(args.fasta,cutoff=args.cutoff)
    